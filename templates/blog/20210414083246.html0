<div class="bread">
  <ul itemscope itemtype="http://schema.org/BreadcrumbList">
    <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
      <a itemprop="item" href="/">
        <span itemprop="name">C言語</span>
      </a>
      <meta itemprop="position" content="1" />
    </li>
    <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
      <a itemprop="item" href="/library.html">
        <span itemprop="name">C標準ライブラリ</span>
      </a>
      <meta itemprop="position" content="2" />
    </li>
    <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
      <a itemprop="item" href="/library/string.html">
        <span itemprop="name">string.h</span>
      </a>
      <meta itemprop="position" content="3" />
    </li>
    <li>
      here
    </li>
  </ul>
</div>

<h2>strncmp関数 - 部分文字列を比較する</h2>

<b>strncmp関数</b>は<a href="/blog/20210331101342.html">文字列</a>を部分的に比較する関数です。指定した文字数「n」で、辞書順で「s1」が「s2」より大きい場合は、正の数を、同じ場合は0を、小さい場合は負の数を返します。

「<a href="/blog/20210303101711.html">string.h</a>」をインクルードすると使えます。

<pre>
#include <string.h>
int strncmp(const char *s1, const char *s2, size_t n);
</pre>

<h3>strncmp関数のサンプル</h3>

strncmp関数で文字列を比較するサンプルです。一致した場合に、Matchと表示します。

<pre>
#include <stdio.h>
#include <string.h>

int main(void) {
  const char* module_name = "Foo::Bar::Baz";
  
  // 先頭がFoo::Barで始まっているか調べる
  if (strncmp(module_name, "Foo::Bar", strlen("Foo::Bar")) == 0) {
    printf("Match\n");
  }
  else {
    printf("Not Match\n");
  }
}
</pre>

<h3>文字列の全体を比較するには?</h3>

文字列の全体を比較するにはstrcmp関数を使用します。

<ul>
  <li><a href="/blog/20210413090615.html">strcmp関数 - 文字列を比較する</a></li>
</ul>
